name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          release-type: rust

  build-and-push-docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub (optional)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
            ${{ secrets.DOCKERHUB_USERNAME }}/simple-docker-manager
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{ needs.release-please.outputs.tag_name }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.release-please.outputs.tag_name }}
            type=semver,pattern={{major}},value=${{ needs.release-please.outputs.tag_name }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ needs.release-please.outputs.tag_name }}
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate deployment instructions
        run: |
          cat > deployment-instructions.md << 'EOF'
          # Simple Docker Manager - Deployment Instructions
          
          ## Docker Images
          
          The following Docker images have been published for version ${{ needs.release-please.outputs.tag_name }}:
          
          ### GitHub Container Registry (Recommended)
          ```bash
          docker pull ghcr.io/${{ github.repository }}:${{ needs.release-please.outputs.tag_name }}
          docker pull ghcr.io/${{ github.repository }}:latest
          ```
          
          ### Docker Hub (if configured)
          ```bash
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/simple-docker-manager:${{ needs.release-please.outputs.tag_name }}
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/simple-docker-manager:latest
          ```
          
          ## Quick Start
          
          ### Using Docker Run
          ```bash
          docker run -d \
            --name simple-docker-manager \
            -p 3000:3000 \
            -v /var/run/docker.sock:/var/run/docker.sock:ro \
            -e SDM_PASSWORD=your-secure-password \
            ghcr.io/${{ github.repository }}:${{ needs.release-please.outputs.tag_name }}
          ```
          
          ### Using Docker Compose
          ```yaml
          version: '3.8'
          services:
            simple-docker-manager:
              image: ghcr.io/${{ github.repository }}:${{ needs.release-please.outputs.tag_name }}
              ports:
                - "3000:3000"
              volumes:
                - /var/run/docker.sock:/var/run/docker.sock:ro
              environment:
                - SDM_PASSWORD=your-secure-password
              restart: unless-stopped
          ```
          
          ## Supported Architectures
          
          - `linux/amd64` (x86_64)
          - `linux/arm64` (ARM64/Apple Silicon)
          
          ## Security Notes
          
          - Always set a strong `SDM_PASSWORD` environment variable
          - The Docker socket is mounted read-only for security
          - Consider running behind a reverse proxy with HTTPS in production
          
          ## Documentation
          
          For complete documentation, visit: https://github.com/${{ github.repository }}
          EOF

      - name: Upload deployment instructions
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release upload ${{ needs.release-please.outputs.tag_name }} deployment-instructions.md 